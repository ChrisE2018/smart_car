* Issue tracker
* Separate command handler from Car class
* Separate data logger for real time variables w/plotter tools
	- logstream : message
* Startup status logger
* State in plugin (start_start, end_state methods)
* Disable robot_appender output from inactive serial port. Add commands.
* Use c20?
* Future events on schedule or condition
	- time based
	- event based, like distance motor moves or angle or goal position
	- what are the actions? (state changes)
	- behavior trees?
* Motor control to run for a specified distance or distance/time curve
	- Control input to kalman filter?
* Minimum speed sensor count for PID control instead of minimum time
* Fix breadboard in position
	- Try to cut clear disk (done)
	- drill holes
* Work on GPS
* Consider removing cycle schedule
* Detect skipped cycles
* Second motor control/speed sensors
* Extra holes to properly mount motor controller
* Mount for computer battery
* Battery level sensor(s)

DONE DONE DONE

1/12/2023
* Make clock not a plugin (module?)
	- Separate modules from plugins?
	- Make plugins with no cycle method?
	- Make cyclic plugin a subclass?
* Detect overruns
* Make MotorPlugin set_speed not turn off auto_velocity
* Nudge MotorPlugin when current velocity is zero

1/13/2023
* enum <uint_8> types